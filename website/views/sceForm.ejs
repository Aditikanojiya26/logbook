<!doctype html>
<html lang="en">

<head>
  <title>SCE-Form</title>
  <!-- Required meta tags -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

  <!-- Bootstrap CSS v5.2.1 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
  <link rel="stylesheet" href="form.css">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <link rel="stylesheet" href="SCe.css">

</head>

<body>
  <header class="bg-secondary text-white text-center py-4">
    <h1>SCE Shift Form</h1>
  </header>

  <main class="container mt-3">
    <!-- Navigation Buttons -->
    <div class="d-grid gap-2 d-md-flex justify-content-md-center mb-3">
      <button class="shift-tab btn btn-primary px-4 py-2 rounded " value="shiftBeginning"
        data-target="shiftBeginning">Shift Beginning</button>
      <button class="shift-tab btn btn-primary px-4 py-2 rounded" value="shiftEnd" data-target="shiftEnd">Shift
        End</button>
      <button class="shift-tab btn btn-primary px-4 py-2 rounded" value="shiftMid"
        data-target="shiftMid">Midnight</button>
    </div>

    <form id="shiftForm" class="form-group">
      <!-- Shift Selection -->
      <!-- <label for="shiftSelect">Select Shift:</label> -->
      <!-- <select id="shiftSelect">
        <option value="shiftBeginning">Shift Beginning</option>
        <option value="midNight">Midnight</option>
        <option value="shiftEnd">Shift End</option>
      </select> -->

      <div id="shiftBeginning" class="card shift-section hidden">
        <div class=" mb-4 ">
          <div class="card-body">
            <h2 class="card-title">Status At Shift Beginning</h2>
      
            <!-- Operational Details -->
            <div class="mb-3 p-1">
              <h4>Operational Details</h4>
              <div class="row">
                <% parameters["Beginning"]["Operational Details"].forEach(param => { %>
                  <div class="col-md-4 mb-3">
                    <label><%= param.name %> <% if (param.unit) { %> (<%= param.unit %>) <% } %></label>
                    <% if (param.inputType === "text" || param.inputType === "number" || param.inputType === "date" || param.inputType === "time") { %>
                      <input 
                        type="<%= param.inputType === 'number' ? 'number' : param.inputType === 'date' ? 'date' : param.inputType === 'time' ? 'time' : 'text' %>" 
                        class="form-control" 
                        name="<%= param.name %>"
                      >
                    <% } else if (param.inputType === "select" || param.inputType === "dropdown") { %>
                      <select class="form-select" name="<%= param.name %>">
                        <% param.options.forEach(opt => { %>
                          <option value="<%= opt %>"><%= opt %></option>
                        <% }) %>
                      </select>
                    <% } %>
                  </div>
                <% }) %>
              </div>
            </div>
      
            <!-- Auxiliary Status -->
            <div class="card mb-3 p-3">
              <h4>Auxiliary Status</h4>
              <div class="row">
                <% auxiliaries["Beginning"].forEach(aux => { %>
                  <div class="col-md-6 mb-4">
                    <div class="card p-3">
                      <h5><%= aux.name %></h5>
                      <div class="row">
                        <% aux.options.forEach(opt => { %>
                          <div class="col-6 mb-2">
                            <div class="form-check">
                              <input class="form-check-input" type="checkbox" 
                                name="<%= aux.name.replace(/\s+/g, '') %><%= opt.optionName %>" 
                                value="<%= opt.optionName %>">
                              <label class="form-check-label">
                                <%= opt.optionName %> (<%= opt.status %>)
                              </label>
                            </div>
                          </div>
                        <% }) %>
                      </div>
                    </div>
                  </div>
                <% }) %>
              </div>
            </div>
      
            <!-- Important Parameters -->
            <div class="card mb-3 p-3">
              <h4>Important Parameters At Shift Beginning</h4>
              <div class="row">
                <% if (parameters["Beginning"]["Important Parameters"] && parameters["Beginning"]["Important Parameters"].length > 0) { %>
                  <% parameters["Beginning"]["Important Parameters"].forEach(param => { %>
                    <div class="col-md-4 mb-3">
                      <label><%= param.name %> <% if (param.unit) { %> (<%= param.unit %>) <% } %></label>
                      <% if (param.inputType === "text" || param.inputType === "number" || param.inputType === "date" || param.inputType === "time") { %>
                        <input 
                          type="<%= param.inputType === 'number' ? 'number' : param.inputType === 'date' ? 'date' : param.inputType === 'time' ? 'time' : 'text' %>" 
                          class="form-control" 
                          name="<%= param.name %>"
                        >
                      <% } else if (param.inputType === "select" || param.inputType === "dropdown") { %>
                        <select class="form-select" name="<%= param.name %>">
                          <% param.options.forEach(opt => { %>
                            <option value="<%= opt %>"><%= opt %></option>
                          <% }) %>
                        </select>
                      <% } %>
                    </div>
                  <% }) %>
                <% } else { %>
                  <p>No important parameters available.</p>
                <% } %>
              </div>
            </div>
      
          </div>
        </div>
      </div>
      

      <div id="shiftEnd" class="shift-section hidden card">
        <div class="Shift_End_Parameters">


          <h2>Status at Shift End </h2>
          <div class="form-grid">
            <% parameters["End"]["Shift End Parameters"].forEach(param=> { %>
              <div class="form-item">
                <label>
                  <%= param.name %>
                    <% if (param.unit) { %> (<%= param.unit %>) <% } %>
                </label>

                <% if (param.inputType==="text" ) { %>
                  <input type="text" name="<%= param.name %>">

                  <% } else if (param.inputType==="select" || param.inputType==="dropdown" ) { %>
                    <select name="<%= param.name %>">
                      <% param.options.forEach(opt=> { %>
                        <option value="<%= opt %>">
                          <%= opt %>
                        </option>
                        <% }) %>
                    </select>

                    <% } else if (param.inputType==="date" ) { %>
                      <input type="date" name="<%= param.name %>">

                      <% } else if (param.inputType==="time" ) { %>
                        <input type="time" name="<%= param.name %>">

                        <% } else { %> <!-- Default to number input -->
                          <input type="number" name="<%= param.name %>">
                          <% } %>
              </div>
              <% }) %>
          </div>
        </div>
      </div>

      <div id="shiftMid" class="card shift-section hidden">
        <h2>Midnight - Shift End Parameters</h2>
        <% if (parameters.Midnight && parameters.Midnight["Shift End Parameters"]) { %>
          <% parameters.Midnight["Shift End Parameters"].forEach(param => { %>
            <div class="form-group">
              <label for="<%= param.name.replace(/\s+/g, '_') %>">
                <%= param.name %>
                <% if (param.unit) { %> (<%= param.unit %>) <% } %>
              </label>
              <input type="<%= param.inputType || 'text' %>" name="midnight_<%= param.name.replace(/\s+/g, '_') %>"
                id="<%= param.name.replace(/\s+/g, '_') %>" placeholder="Enter value" />
            </div>
          <% }) %>
        <% } else { %>
          <p>No Shift End Parameters found for Midnight.</p>
        <% } %>
      
        <% Object.keys(parameterAuxiliaries).forEach(shift => { %>
          <% if (parameterAuxiliaries[shift].length > 0) { %>
            <h2>Midnight Details</h2>
            <% parameterAuxiliaries[shift].forEach(aux => { %>
              <% if (aux.reading && aux.reading.length > 0) { %>
                <table border="1" cellpadding="8" cellspacing="0">
                  <thead>
                    <tr>
                      <th>Parameter</th>
                      <% aux.options.forEach(opt => { %>
                        <th><%= opt.optionName %></th>
                      <% }) %>
                    </tr>
                  </thead>
                  <tbody>
                    <% aux.reading.forEach(read => { %>
                      <tr>
                        <td><%= read.parameterName %></td>
                        <% aux.options.forEach(opt => { %>
                          <td>
                            <input type="text"
                              name="aux_<%= aux.name.replace(/\s+/g, '') %><%= read.parameterName.replace(/\s+/g, '') %><%= opt.optionName %>"
                              placeholder="Enter value" />
                          </td>
                        <% }) %>
                      </tr>
                    <% }) %>
                  </tbody>
                </table>
                <br />
              <% } %>
            <% }) %>
          <% } %>
        <% }) %>
      </div>
      

      <button id="submitButton" type="submit">Submit</button>
    </form>
  </main>
</body> 
<!-- inside views/page.ejs -->
<script>
  const permission = JSON.parse('<%- JSON.stringify(permission) %>');
  console.log("Permission from server:", permission);
</script>


<script>

  let selectedShift = "shiftBeginning";
  console.log(selectedShift)
  $(document).ready(function () {
    $('.shift-tab').click(function () {
      const targetForm = $(this).data('target');
      selectedShift = $(this).val();

      // Hide all shift sections
      $('.shift-section').addClass('hidden');

      // Show the selected section
      const $target = $('#' + targetForm);
      if ($target.length) {
        $target.removeClass('hidden');
      } else {
        console.warn('No matching section for:', targetForm);
      }
    });

    // Show the first form by default
    $('.shift-tab').first().click();
  });


  // When the form is submitted
  document.getElementById("shiftForm").addEventListener("submit", async function (e) {
    e.preventDefault();




    // Fetch permission values (injected in EJS or stored in hidden inputs)

    const userId = permission.userId;
    const unitId = permission.unitId;
    const shiftId = permission.shiftId;
    const shiftStartTime = new Date().toISOString(); // Or permission.shiftStartTime if stored

    // Collect data for the selected shift
    const shiftSection = document.getElementById(selectedShift);
  const parameters = [];
  
  // Updated selector to properly get all inputs in the current section
  let parameterInputs;
  if (selectedShift === "shiftBeginning") {
    parameterInputs = shiftSection.querySelectorAll(`
      .operational_details input, 
      .operational_details select,
      .important_params input,
      .important_params select
    `);
  } else if (selectedShift === "shiftEnd") {
    parameterInputs = shiftSection.querySelectorAll(`
      .Shift_End_Parameters input,
      .Shift_End_Parameters select
    `);
  } else if (selectedShift === "shiftMid") {
    parameterInputs = shiftSection.querySelectorAll(`
      input:not([type="checkbox"]),
      select
    `);
  }
  
  parameterInputs.forEach(input => {
    if (input.name && input.value !== undefined && input.value!== "") {
      parameters.push({
        name: input.name.trim(),
        value: input.value.trim()
      });
    }
  });

    console.log(parameters); // Add this to log the parameters array

    // Now ensure that you are passing this `parameters` array in the data sent to the backend



    // Collect auxiliaries for the selected shift section
    const auxiliaries = [];
    const auxDivs = shiftSection.querySelectorAll(".aux_status .form-item");

    auxDivs.forEach(auxDiv => {
      const auxName = auxDiv.querySelector("h4").textContent.trim();
      const checkboxes = auxDiv.querySelectorAll("input[type='checkbox']:checked");

      if (checkboxes.length > 0) {
        const selectedOptions = [];
        checkboxes.forEach(cb => selectedOptions.push(cb.nextSibling.textContent.trim().split(' ')[0])); // Extract "A", "B", etc.

        // Find auxiliary ID from dataset
        const auxiliaryId = auxDiv.dataset.auxid;

        if (auxName && selectedOptions.length > 0) {
          auxiliaries.push({
            auxiliaryId: auxiliaryId,
            auxiliaryName: auxName,
            selectedOptions: selectedOptions
          });
        }
      }
    });


    // Prepare the data for the current shift
    const shiftData = {
      section: selectedShift,
      userId: userId,
      unitId: unitId,
      shiftId: shiftId,
      shiftStartTime: shiftStartTime,
      ...(parameters.length > 0 && { parameters: parameters }),
      ...(auxiliaries.length > 0 && { inServiceAuxiliaries: auxiliaries })
    };



    // Step 2: POST to server (submit the current shift's data)
    try {
      const response = await fetch("/submit-section", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(shiftData) // Send only the data for the selected shift
      });

      const result = await response.json();
      if (response.ok) {
        alert("Shift data submitted successfully!");
      } else {
        alert("Submission failed: " + result.message);
      }
    } catch (error) {
      console.error("Error submitting:", error);
      alert("An error occurred while submitting the form.");
    }
  });
</script>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
  integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
  integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

</html>